자료형
    [자료에 대한 타입]
        [숫자]
            정수형(int), 실수(float), 컴퓨터식 지수 표현, 8진수, 16진수

            [연산]
                + 더하기
                - 빼기
                * 곱하기
                / 나누기
                // 몫을 구하기
                % 나머지를 구하기
                ** 제곱

        [문자열]
            언어 계열
            
            [문자열 자료형 만들기]
                " 큰따옴표
                ' 작은 따옴표
                """ 큰따옴표 3개
                ''' 작은 따옴표 3개

                문자열 자료형을 만들때 따옴표를 문자열을 만들기 위해 여러 따옴표 조합을 사용해 사용가능 (\로도 가능)
                ex. print("\'hello world\'")

                + 이스케이프 문자
                \n enter (한줄 띄어쓰기)
                \t tab (탭 너비 띄어쓰기)

            [문자열 더하기]
                + 문자열들끼리 붙이기

            [문자열 곱하기]
                * 문자열을 여러번 출력하기

            [인덱싱(indexing)]
                문자열의 숫자를 0부터 시작
                ex. a = "hello world"
                    a[0] = h, a[1] = e ...
                    a[-1] = d (-는 거꾸로 가는 순서)

            [슬라이싱(slicing)]
                문자열을 원하는 부분만 잘라서 출력
                변수[이상(시작하는 인덱싱):미만(종료하는 인덱싱 - 1):간격]의 형식으로 구성 (간격은 생략 가능)
                ex. a = "hello world"
                    a[0:5] = hello
                    a[6:] = world
                    a[::2] = hlowrd

            [문자열 포멧팅(format)]
                문자열을 만들때 숫자를 섞어서 표현할때 사용
                %d 정수
                %s 문자열 (뭐든 다 쓸 수 있음)
                %f 실수
                {} .format()
                ex. a = "I ate %d apples." % 3
                    a = I ate 3 apples.
                    b = "I\'m {age} years old" .format(age = 24)
                    b = I'm 24 years old
                    (python 3.6 버전 이상만 가능)
                    name = "홍길동"
                    a = f"나의 이름은 {name}입니다."
                    a = 나의 이름은 홍길동입니다.

            [정렬과 공백]
                ex. a = "%10s" % hi
                    a =           hi (10칸 띄어진 공백의 hi)
                    b = "%-10sjane." % hi
                    b = hi          jane

            [소수점 표현]
                ex. a = "%0.4f" % 3.141592 (소수점 4자리까지만 출력)
                    a = 3.1415

            [문자열 개수 세기 count()]
                count()
                ex. a = "hello"
                    a.count("l") = 2
            
            [위치 알려주기(인덱싱 번호) find()]
                find()
                ex. a = "hello"
                    a.find("h") = 0 (해당 문자열의 위치를 못찾으면 -1로 출력)
                index()
                ex. b = "world"
                    b.index("b") = 4 (해당 문자열의 위치를 못찾으면 에러 발생)

            [문자열 삽입 join()]
                join()
                ex. a = ","
                    a.join('abcd') = a,b,c,d

            [소문자를 대문자로 바꾸기 upper()]
                upper()
                ex. a = "hi"
                    a.upper() = HI

            [대문자를 소문자로 바꾸기 lower()]
                lower()
                ex. a = "HI"
                    a.lower() = hi
            
            [양쪽 공백 지우기 strip()]
                strip()
                ex. a = "   hi   "
                    a.strip() = hi (양쪽 공백을 지우고 출력)

            [문자열 바꾸기 replace()]
                replace(바꾸고자 하는 해당 문자열, 바꾸려는 문자열)
                ex. a = "hello world"
                    a.replace("hello", "hi") = hi world

            [문자열 나누기 split()]
                문자열을 나누어서 list 형태로 출력
                split(나누고자 하는 기준)
                ex. a = "Life is too short"
                    a.split() = ['Life', 'is', 'too', 'short'] (split()공란시 띄어쓰기를 기준으로 문자열을 나눔)
                    b = "a:b:c:d"
                    b.split(":") = ['a', 'b', 'c', 'd'] (:를 기준으로 문자열을 나누어 출력)

                    
        [불]
            참 or 거짓

    [어떤 값을 담는 자료구조]
        [변수]
            어떤 값을 담는 상자
        [리스트]
            변수가 여러개인 것 (상자를 보관하는 서랍장)
            [리스트 유형]
                a = [] 빈값
                b = [1, 2, 3] 숫자
                c = ['Life', 'is', 'too', 'short'] 문자
                d = [1, 2, 'life', 'is'] 숫자 + 문자
                e = [1, 2, ['life', 'is']] 숫자 + 문자 / list안에 list를 넣을 수 있음
                    print(e[2]) list안에 list 전체를 불러오기 / 결과값 ['life', 'is']
                    print(e[2][0]) list안에 list 내의 해당하는 데이터를 불러오기 / 결과값 life  
            [리스트 연산]
                f = [1, 2, 3]
                g = [4, 5, 6]
                print(f + g) 서로 다른 list들을 합치기 / 결과값 [1, 2, 3, 4, 5, 6]
            [리스트 수정]
                h = ["대한민국", "수도", "서울"]
                    h[2] = "부산"
                    print(h) = ["대한민국", "수도", "부산"]
            [리스트 연속된 범위의 값 수정]
                i = ['가', '나', 다']
                    i[0:2] = ['라', '마']
                    print(i) = ["라", "마", "다"]
            [리스트 삭제]
                j = ['가', '나', '다']
                    j[0:2] = []
                    print(j) = ["다"]
                    del j[0]
                    print(j) = []
            [리스트 추가 append()]
                k = ['가', '나', '다']
                    k.append('라')
                    print(k) = ["가", "나", "다", "라"]
            [리스트 정렬 sort()]
                l = [1, 5, 3]
                l.sort()
                print(l) = [1, 3, 5]
            [리스트 뒤집기 reverse()]
                a = ["a", "b", "c"]
                a.reverse()
                print(a) = ["c", "b", "a"] 
            [위치 반환 index()]
                a = [1, 2, 3]
                print(a.index(1)) = 0(0번째 index)
            [리스트 ]    

        [튜플]
        [딕셔너리]
        [집합]