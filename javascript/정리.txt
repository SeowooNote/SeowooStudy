JavaScript
    웹 브라우저 회사에서 제작(웹 브라우저 : 인터넷 연결 프로그램)

    웹의 동작(동적)을 구현하기 위한 언어
    웹 브라우저에서 동작(단, node.js는 서버에서 동작)
    HTML문서 내에서 <script> ~ </script>태그 안에 작성
    대소문자를 구별
    객체 기반의 스크립트 언어
    웹 브라우저 자바스크립트 엔진이 내장되어 있기 떄문에 사용이 가능

[JavaScript의 출력]
    document.write()함수를 통해 <body>에 출력
    console.log()함수를 통해 브라우저 console에 출력

[외부 JavaScript 파일로 적용]
    <script src="자바스크립트 파일 경로"></script>
    자바스크립트의 파일의 확장명은 .json

[JavaScript의 주석문]
    // : 한줄 주석
    /* */ : 여러줄 주석

[use strict]
    strict mode를 사용한다는 의미이며, 코드를 엄격하게 사용하도록함
    <script>
        'use strict';
        ...
    </script>    

[변수(Variable)]
    데이터를 저장할 수 있는 메모리 공간을 의미
    값이 변경될 수 있으며 JavaScript에서는 let이라는 키워드를 사용하여
    변수를 선언하고 선언되지 않은 변수를 사용하거나 접근하려고 하면 오류가 발생

    var 변수명; : 변수를 선언   ex. var num;
    변수명 = 값; : 변수를 초기화    ex. num = 10;
    let 변수명; : 변수를 선언   ex. let num;
    변수명 = 값; : 변수를 초기화    ex. num = 10;
    (let을 주로 사용)
    (var를 사용하지 않는 이유 : 같은 이름의 변수를 선언할 수 있음
                           지역변수와 전역변수의 구별이 없음)
    
    [변수를 만드는 규칙]
        사용가능한 문자는 영문자, 숫자, _, $
        숫자로 시작할 수 없음
        공백은 허용되지 않음
        자바스크립트 문접안에서 규정한 예약어는 변수로 사용 금지
            ex. let var; (x)
    
[상수(constant)]
    한번 선언된 상수는 다시 재정의 할 수 없으며, 값도 재할당 할 수 없음
    
    const 상수명 = 값;
    (숫자형, 문자열 형, 참 또는 거짓에 상태값 등)

[JavaScript의 데이터타입(형)]
    typeof()함수
        타입을 나타내는 문자열을 리턴
    
    숫자형(number)
        자바스크립트는 다른 언어와 달리 정수와 실수를 따로 구분하지 않음
        모든 수를 실수 하나로만 표현
    
    문자열형(string)
        자바스크립트는 문자열을 쌍따옴표(""), 따옴표('')로 둘러싸인 문자의 집합을 의미이며
    
    불리언형(boolean)
        참(true) 또는 거짓(false)으로 표현되는 값

        const a1 = true; : 값이 있으면 true
        const a2 = false; : 0, null, undefined
    
    undefined, null 형
        undefined : 타입이 정해지지 않은 것을 의미
                    변수 선언 후 값이 정해지지 않은 경우
        null : 값이 정해지지 않은 것을 의미
               null로 변수를 초기화 한 경우
               object타입
        (NaN(Not a Number) : 정의되지 않은 값이나 표현할 수 없는 값을 뜻함
                             예를들어 0을 0으로 나누거나, 숫자로 반환할 수 없는 연산을 시도한 경우 반환)

    객체형(Object)
        여러 속성을 하나의 변수에 저장할 수 있도록 해주는 데이터타입
        
        let num = 100; (일반적인 변수 값이 하나만 존재)
        console.log(num); : 100

        let arr = [100, 200, 300, 400, 500]; (배열 : 값이 여러개 존재)
        console.log(arr[0]); : 100 출력
        console.log(arr[1]); : 200 출력
        console.log(arr[2]); : 300 출력
        console.log(arr[3]); : 400 출력
        console.log(arr[4]); : 500 출력

        let student = {"name" : "홍길동", "age" : 20} (데이터 형식)
                        key      value   key   value
        console.log(student.name); : 홍길동 출력

    심볼형(Symbol)
        유일하고 변경 불가능한 기본값을 만듬, 객체 속성의 key값으로도 사용할 수 있음
        
        const sym1 = Symbol("apple");
        const sym2 = Symbol("apple");
        console.log(sym1 === sym2); : false(유일하고 변경 불가능한 기본값이기 때문에 중복될 수 없음)
    
    [JavaScript의 데이터타입 변환]
        자바스크립트의 변수는 타입이 고정되어 있지 않으며,
        같은 변수에 다른 타입의 값을 대입할 수 있음
        
        let a = 10; // 숫자형
        console.log(a); : 10
        a = 'Hello'; // 문자열형
        console.lof(a); : Hello

        [암시적 타입 변환]
            데이터타입의 값을 기대하는 곳에 다른 타입의 값이 오면 자동으로 타입을 변환해서 사용
        
        [명시적 타입 변환]
            자바스크립트는 자동으로 타입 변환을 사용하지만 종종 명시적으로 타입을 변환할 필요가 있음
            
            Number() : 문자를 숫자로 변환
                Number("10" + "5") (X)
            String() : 숫자나 불린등을 문자형으로 변환
            Boolean() : 문자나 숫자등을 불린형으로 변환
            Object() : 모든 자료형을 객체형으로 변환
            parseInt() : 문자형을 int형으로 변환
            parseFloat() : 문자형을 float형으로 변환
    
    [JavaScript의 대화상자]
        alert() 또는 window.alert() : 사용자에게 메세지를 보여주고, 확인을 기다림
        confirm() 또는 window.confirm() : 사용자에게 메세지를 보여주고,
                                         확인이나 취소를 누르면 그 결과를 불리언값으로 리턴
            ex. const result = confirm('확인 또는 취소를 눌러주세요');
        prompt() 또는 window.prompt() : 사용자에게 메세지를 보여주고,
                                       사용자가 입력한 문자열을 리턴
            ex. const result = prompt('이름을 입력하세요');

